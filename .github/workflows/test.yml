name: Code Quality & Regression Tests

on:
  pull_request:
    branches: [main]

jobs:
  build:
    if: ${{ !github.event.act }}
    runs-on: ubuntu-latest

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: üõéÔ∏è Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
      
      - name: ü¶æ Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest requests pillow requests_toolbelt black isort flake8
      - name: üßπ Lint with flake8
        run: |
          make check_code_quality
      - name: üî® Build and Push Test Docker
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: roboflow/roboflow-inference-server-cpu:test
          cache-from: type=registry,ref=roboflow/roboflow-inference-server-cpu:test-cache
          cache-to: type=registry,ref=roboflow/roboflow-inference-server-cpu:test-cache,mode=max
          platforms: linux/amd64
          file: ./docker/dockerfiles/Dockerfile.onnx.cpu
      - name: üîã Start Test Docker
        run: |
          PORT=9101 INFERENCE_SERVER_REPO=roboflow-inference-server-cpu DOCKERFILE=Dockerfile.onnx.cpu make start_test_docker
      - name: üß™ Regression Tests
        run: |
          PORT=9101 API_KEY=${{ secrets.API_KEY }} asl_instance_segmentation_API_KEY=${{ secrets.ASL_INSTANCE_SEGMENTATION_API_KEY }} asl_poly_instance_seg_API_KEY=${{ secrets.ASL_POLY_INSTANCE_SEG_API_KEY }} bccd_favz3_API_KEY=${{ secrets.BCCD_FAVZ3_API_KEY }} bccd_i4nym_API_KEY=${{ secrets.BCCD_I4NYM_API_KEY }} cats_and_dogs_smnpl_API_KEY=${{ secrets.CATS_AND_DOGS_SMNPL_API_KEY }} coins_xaz9i_API_KEY=${{ secrets.COINS_XAZ9I_API_KEY }} python -m pytest test/
